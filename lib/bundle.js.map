{"version":3,"sources":["webpack:///webpack/bootstrap ca638c26d4cb7b308768","webpack:///./lib/donut_runner.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca638c26d4cb7b308768","document.addEventListener(\"DOMContentLoaded\", () => {\n  // const canvas = document.getElementById('game');\n  // const ctx = canvas.getContext('2d');\n\n  var img = new Image();\n  img.src = 'https://s3.us-east-2.amazonaws.com/donut-runner/background.png';\n  var CanvasXSize = 800;\n  var CanvasYSize = 400;\n  var speed = 1; // lower is faster\n  // var scale = 1.05;\n  var y = -4.5; // vertical offset\n\n  // Main program\n\n  var dx = 0.75;\n  var imgW;\n  var imgH;\n  var x = 0;\n  var clearX;\n  var clearY;\n  var ctx;\n\n  img.onload = function() {\n    imgW = img.width;\n    imgH = img.height;\n\n    if (imgW > CanvasXSize) {\n      x = CanvasXSize - imgW;\n    } // image larger than canvas\n    if (imgW > CanvasXSize) {\n      clearX = imgW;\n    } // image width larger than canvas\n    else {\n      clearX = CanvasXSize;\n    }\n    if (imgH > CanvasYSize) {\n      clearY = imgH;\n    } // image height larger than canvas\n    else {\n      clearY = CanvasYSize;\n    }\n\n    // get canvas context\n    ctx = document.getElementById('game').getContext('2d');\n\n    // set refresh rate\n    return setInterval(draw, speed);\n  };\n\n  function draw() {\n    ctx.clearRect(0, 0, clearX, clearY); // clear the canvas\n\n    // if image is <= Canvas Size\n    if (imgW <= CanvasXSize) {\n      // reset, start from beginning\n      if (x > CanvasXSize) {\n        x = -imgW + x;\n      }\n      // draw additional image1\n      if (x > 0) {\n        ctx.drawImage(img, -imgW + x, y, imgW, 400);\n      }\n      // draw additional image2\n      if (x - imgW > 0) {\n        ctx.drawImage(img, -imgW * 2 + x, y, imgW, 400);\n      }\n    }\n\n    // if image is > Canvas Size\n    else {\n      // reset, start from beginning\n      if (x > (CanvasXSize)) {\n        x = CanvasXSize - imgW;\n      }\n      // draw aditional image\n      if (x > (CanvasXSize - imgW)) {\n        ctx.drawImage(img, x - imgW + 1, y, imgW, 400);\n      }\n    }\n    // draw image\n    ctx.drawImage(img, x, y, imgW, 400);\n    // amount to move\n    x += dx;\n  }\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/donut_runner.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}