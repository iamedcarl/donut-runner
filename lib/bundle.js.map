{"version":3,"sources":["webpack:///webpack/bootstrap eb7d023898cd92e8dfaf","webpack:///./lib/sprite.js","webpack:///./lib/donut_runner.js","webpack:///./lib/game.js","webpack:///./lib/background.js","webpack:///./lib/runner.js","webpack:///./lib/obstacle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,iBAAiB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;AClFA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;ACZD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,oBAAoB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;ACzEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC1BA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC/DA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eb7d023898cd92e8dfaf","const CANVAS_X_SIZE = 900;\nconst CANVAS_Y_SIZE = 450;\n\nclass Sprite {\n  constructor(options){\n    this.ctx = options.ctx;\n    this.image = options.image;\n    this.xPos = options.xPos;\n    this.yPos = options.yPos;\n    this.imgW = options.imgW;\n    this.imgH = options.imgH;\n    this.scale = options.scale;\n    this.speed = options.speed || 0;\n\n    this.numberOfFrames = options.numberOfFrames || 1;\n    this.startFrame = options.startFrame;\n    this.ticksPerFrame = options.ticksPerFrame || 0;\n    this.frameIndex = this.startFrame;\n    this.tickCount = 0;\n    this.scroll = 0;\n  }\n\n  update() {\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      if (this.frameIndex < this.numberOfFrames -1 ){\n        this.frameIndex += 1;\n      } else {\n        this.frameIndex = this.startFrame;\n      }\n    }\n  }\n\n  renderRunner() {\n    this.ctx.clearRect(\n      0,\n      0,\n      CANVAS_X_SIZE,\n      CANVAS_Y_SIZE\n    );\n\n    let img = this.image;\n    let sx = (this.imgW / this.numberOfFrames) * this.frameIndex;\n    let sy = 0;\n    let sw = this.imgW / this.numberOfFrames;\n    let sh = this.imgH;\n    let dx = this.xPos;\n    let dy = this.yPos;\n    let dw = (this.imgW / this.numberOfFrames) * this.scale;\n    let dh = this.imgH * this.scale;\n\n    this.ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n  }\n\n  renderObstacle() {\n    this.ctx.clearRect(\n      100,\n      0,\n      CANVAS_X_SIZE,\n      CANVAS_Y_SIZE\n    );\n\n    if (this.scroll <= -CANVAS_X_SIZE) { this.scroll = 0; }\n\n    let img = this.image;\n    let sx = (this.imgW / this.numberOfFrames) * this.frameIndex;\n    let sy = 0;\n    let sw = this.imgW / this.numberOfFrames;\n    let sh = this.imgH;\n    let dx = this.scroll + CANVAS_X_SIZE;\n    let dy = this.yPos;\n    let dw = (this.imgW / this.numberOfFrames) * this.scale;\n    let dh = this.imgH * this.scale;\n\n    this.ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n\n    this.scroll -= this.speed;\n  }\n\n}\n\nexport default Sprite;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sprite.js\n// module id = 0\n// module chunks = 0","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const backgroundCanvas = document.getElementById('background');\n  const backgroundCtx = backgroundCanvas.getContext('2d');\n\n  const gameCanvas = document.getElementById('game');\n  const gameCtx = gameCanvas.getContext('2d');\n\n  const game = new Game(gameCanvas, gameCtx, backgroundCtx);\n  game.draw();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/donut_runner.js\n// module id = 1\n// module chunks = 0","import Background from './background';\nimport Runner from './runner';\nimport Obstacle from './obstacle';\n\nconst IMGS = [\n  ['https://s3.us-east-2.amazonaws.com/donut-runner/selma.png', 6],\n  ['https://s3.us-east-2.amazonaws.com/donut-runner/barney.png', 3],\n  ['https://s3.us-east-2.amazonaws.com/donut-runner/martin-prince.png', 3],\n  ['https://s3.us-east-2.amazonaws.com/donut-runner/milhouse.png', 5],\n  ['https://s3.us-east-2.amazonaws.com/donut-runner/shifty-eyed-baby.png', 6]\n];\n\nclass Game {\n  constructor(gameCanvas, gameCtx, backgroundCtx) {\n    this.gameCtx = gameCtx;\n    this.gameCanvas = gameCanvas;\n\n    this.runner = new Runner(gameCtx);\n    this.createBackground(backgroundCtx, 1);\n    this.createObstacles(gameCtx, 3);\n    this.bindKeyHandlers();\n\n    this.draw = this.draw.bind(this);\n    this.runnerJump = this.runnerJump.bind(this);\n  }\n\n  bindKeyHandlers() {\n    key(\"space\", () => { this.runnerJump() });\n  }\n\n  createBackground(ctx, speed) {\n    const bg = new Image();\n    bg.src = 'https://s3.us-east-2.amazonaws.com/donut-runner/background.png';\n    this.background = new Background(ctx, bg, speed);\n  }\n\n  createObstacles(ctx, speed) {\n    this.obstacleSelma = new Obstacle(ctx, IMGS[0][0], IMGS[0][1], speed);\n    this.obstacleBarney = new Obstacle(ctx, IMGS[1][0], IMGS[1][1], speed);\n    this.obstacleMartin = new Obstacle(ctx, IMGS[2][0], IMGS[2][1], speed);\n    this.obstacleMilhouse = new Obstacle(ctx, IMGS[3][0], IMGS[3][1], speed);\n    this.obstacleBaby = new Obstacle(ctx, IMGS[4][0], IMGS[4][1], speed);\n  }\n\n  runnerJump() {\n    this.runner.jumping = true;\n    this.runner.jump();\n  }\n\n  draw() {\n    requestAnimationFrame(this.draw);\n    this.background.draw();\n    this.runner.draw();\n    // this.obstacleSelma.draw();\n    this.obstacleBarney.draw();\n    // this.obstacleMartin.draw();\n    // this.obstacleMilhouse.draw();\n    // this.obstacleBaby.draw();\n  }\n\n  randomObstacles() {\n    const obstacles = [\n      this.obstacleSelma.draw,\n      this.obstacleBarney.draw,\n      this.obstacleMartin.draw,\n      this.obstacleMilhouse.draw\n    ];\n\n    return setInterval(obstacles[Math.floor(Math.random() * 5)],60);\n  }\n\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","const CANVAS_X_SIZE = 900;\nconst CANVAS_Y_SIZE = 450;\n\nclass Background {\n  constructor(ctx, img, speed) {\n    this.ctx = ctx;\n    this.img = img;\n    this.speed = speed;\n\n    this.scroll = 0;\n    this.imgW = this.img.width * 1.7;\n    this.imgH = CANVAS_Y_SIZE;\n    this.clearX = this.imgW;\n    this.clearY = CANVAS_Y_SIZE;\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.clearX, this.clearY);\n    if (this.scroll <= -this.imgW) { this.scroll = 0; }\n    this.ctx.drawImage(this.img, this.scroll, 0, this.imgW, this.imgH);\n    this.ctx.drawImage(this.img, this.scroll + this.imgW, 0, this.imgW, this.imgH);\n    this.scroll -= this.speed;\n  }\n\n}\n\nexport default Background;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/background.js\n// module id = 3\n// module chunks = 0","import Sprite from './sprite';\n\nconst CANVAS_X_SIZE = 900;\nconst CANVAS_Y_SIZE = 450;\n\nclass Runner {\n  constructor(ctx) {\n    this.ctx = ctx;\n\n    this.initialize();\n    this.draw = this.draw.bind(this);\n    this.jump = this.jump.bind(this);\n\n    this.jumping = false;\n    this.groundDy = CANVAS_Y_SIZE / 1.6;\n    this.jumpDy = 12;\n    this.gravity = 0.3;\n    this.jumpCount = 0;\n  }\n\n  draw() {\n    if(this.jumping) { this.jump(); }\n    this.runningHomer.update();\n    this.runningHomer.renderRunner();\n  }\n\n  initialize() {\n    const img = new Image();\n    img.src =\n      'https://s3.us-east-2.amazonaws.com/donut-runner/running-homer.png';\n\n    this.runningHomer = new Sprite({\n      ctx: this.ctx,\n      image: img,\n      xPos: CANVAS_X_SIZE / 50,\n      yPos: CANVAS_Y_SIZE / 1.6,\n      imgW: img.width,\n      imgH: img.height,\n      ticksPerFrame: 7,\n      numberOfFrames: 12,\n      startFrame: 4,\n      scale: 1.6,\n    });\n\n  }\n\n  jump() {\n    if (\n      this.jumpCount === 0\n      || (this.runningHomer.yPos !== this.groundDy)\n      && this.jumping\n    ) {\n      this.runningHomer.yPos -= this.jumpDy - this.gravity * this.jumpCount;\n      this.jumpCount += 1;\n    } else {\n      this.runningHomer.yPos = this.groundDy;\n      this.jumpCount = 0;\n      this.jumping = false;\n    }\n  }\n\n}\n\nexport default Runner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/runner.js\n// module id = 4\n// module chunks = 0","import Sprite from './sprite';\n\nconst CANVAS_X_SIZE = 900;\nconst CANVAS_Y_SIZE = 450;\n\n\nclass Obstacle {\n  constructor(ctx, imageUrl, frames, speed) {\n    this.ctx = ctx;\n    this.image = imageUrl;\n    this.frames = frames;\n    this.speed = speed;\n\n    this.generateObstacles();\n    this.draw = this.draw.bind(this);\n  }\n\n  generateObstacles() {\n    const image = new Image();\n    image.src = this.image;\n\n    this.obstacle = new Sprite({\n      ctx: this.ctx,\n      image: image,\n      yPos: CANVAS_Y_SIZE / 1.6,\n      imgW: image.width,\n      imgH: image.height,\n      ticksPerFrame: 80,\n      numberOfFrames: this.frames,\n      startFrame: 1,\n      scale: 1.6,\n      speed: this.speed\n    });\n\n  }\n\n  draw() {\n    this.obstacle.update();\n    this.obstacle.renderObstacle();\n  }\n}\n\nexport default Obstacle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/obstacle.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}